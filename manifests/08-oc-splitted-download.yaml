apiVersion: apps/v1
kind: Deployment
metadata:
  name: oc-download
  namespace: default
  labels:
    app: oc-download
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oc-download
  template:
    metadata:
      labels:
        app: oc-download
    spec:
      containers:
        - name: oc-download
          image: opencitations/oc_download:${DOWNLOAD_WEBSITE_VERSION}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: BASE_URL
              value: "${DOWNLOAD_BASE_URL}"
            - name: META_HOST
              value: ${META_SERVICE_NAME}
            - name: META_PORT
              value: '1111'
            - name: META_USER
              value: ${META_USER}
            - name: META_PASSWORD
              value: ${META_DBA_PASSWORD}
          resources:
            limits:
              cpu: "600m"
              memory: "2Gi"
            requests:
              memory: 1Gi
              cpu: 200m
          volumeMounts:
            - name: log-storage
              mountPath: /mnt/log_dir
      volumes:
        - name: log-storage
          persistentVolumeClaim:
            claimName: nfs-log-dir-claim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
 name: oc-download-service
 namespace: default
 labels:
   app: oc-download
spec:
 selector:
   app: oc-download
 ports:
   - name: http
     port: 80
     protocol: TCP
     targetPort: 8080
 type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
 name: oc-download
 namespace: default
 labels:
   app: oc-download
spec:
 entryPoints:
   - websecure
 routes:
   - kind: Rule
     match: Host(`${DOWNLOAD_BASE_URL}`)
     services:
       - name: varnish-service
         port: 80
 tls:
   certResolver: myresolver
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
 name: oc-download-http-only
 namespace: default
 labels:
   app: oc-download
spec:
 entryPoints:
   - web
 routes:
   - kind: Rule
     match: Host(`${DOWNLOAD_BASE_URL}`)
     middlewares:
       - name: redirect-to-https
     services:
       - name: varnish-service
         port: 80