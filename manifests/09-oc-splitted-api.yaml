apiVersion: apps/v1
kind: Deployment
metadata:
  name: oc-api
  namespace: default
  labels:
    app: oc-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: oc-api
  template:
    metadata:
      labels:
        app: oc-api
    spec:
      containers:
        - name: oc-api
          image: opencitations/oc_api:${API_WEBSITE_VERSION}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: BASE_URL
              value: "${API_BASE_URL}"
            - name: REDIS_ENABLED
              value: "${REDIS_ENABLED}"
            - name: REDIS_HOST
              value: "${REDIS_HOST}"
            - name: REDIS_PORT
              value: '6379'
            - name: REDIS_PASSWORD
              value: "${REDIS_PWD}"
            - name: REDIS_DB
              value: '${REDIS_DB}'
            - name: META_HOST
              value: ${META_SERVICE_NAME}
            - name: META_PORT
              value: '1111'
            - name: META_USER
              value: ${META_USER}
            - name: META_PASSWORD
              value: ${META_DBA_PASSWORD}
          resources:
            limits:
              cpu: "2"
              memory: "8Gi"
            requests:
              memory: 4Gi
              cpu: 800m
          volumeMounts:
            - name: log-storage
              mountPath: /mnt/log_dir
          # Health Checks
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 25
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
      volumes:
        - name: log-storage
          persistentVolumeClaim:
            claimName: nfs-log-dir-claim
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
 name: oc-api-service
 namespace: default
 labels:
   app: oc-api
spec:
 selector:
   app: oc-api
 ports:
   - name: http
     port: 80
     protocol: TCP
     targetPort: 8080
 type: ClusterIP

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: meta-v1-api-redirects
spec:
  redirectRegex:
    regex: .*/meta/v1/(author|editor)(/)?$
    replacement: https://api.opencitations.net/meta/v1
    permanent: true

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: metadata-index-v1-stop
spec:
  redirectRegex:
    regex: .*/index/v1/metadata(.*)
    replacement: https://api.opencitations.net/
    permanent: true

---

#Inizio sezione per i redirect CORS
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: cors-headers
  namespace: default
spec:
  headers:
    customResponseHeaders:
      Access-Control-Allow-Origin: "*"
      Access-Control-Allow-Methods: "GET, POST, HEAD, OPTIONS"
      Access-Control-Allow-Headers: "Accept, Authorization, Content-Type, Origin, X-Requested-With"

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: metadata-index-v1-stop-cors
  namespace: default
spec:
  chain:
    middlewares:
      - name: cors-headers
      - name: metadata-index-v1-stop

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: index-v1v2-api-redirects
spec:
  redirectRegex:
    regex: .*/index/(v1|v2)/(citation|citation-count|reference-count|metadata|citations|references|venue-citation-count)(/)?$
    replacement: https://api.opencitations.net/index/$1
    permanent: true

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
 name: oc-api
 namespace: default
 labels:
   app: oc-api
spec:
 entryPoints:
   - websecure
 routes:
   - kind: Rule
     match: Host(`${API_BASE_URL}`)
     middlewares:
       - name: meta-v1-api-redirects
       - name: index-v1v2-api-redirects
       - name: url-decode-forwardslash
       - name: metadata-index-v1-stop-cors
     services:
       - name: varnish-service
         port: 80
 tls:
   certResolver: myresolver
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
 name: oc-api-http-only
 namespace: default
 labels:
   app: oc-api
spec:
 entryPoints:
   - web
 routes:
   - kind: Rule
     match: Host(`${API_BASE_URL}`)
     middlewares:
       - name: redirect-to-https
     services:
       - name: varnish-service
         port: 80