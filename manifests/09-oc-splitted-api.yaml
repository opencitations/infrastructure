apiVersion: apps/v1
kind: Deployment
metadata:
  name: oc-api
  namespace: default
  labels:
    app: oc-api
spec:
  selector:
    matchLabels:
      app: oc-api
  template:
    metadata:
      labels:
        app: oc-api
    spec:
      containers:
        - name: oc-api
          image: opencitations/oc_api:${API_WEBSITE_VERSION}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: API_BASE_URL
              value: "${API_BASE_URL}"
            - name: VIRTUOSO_HOST
              value: ${VIRTUOSO_SERVICE_NAME}
            - name: VIRTUOSO_PORT
              value: '1111'
            - name: VIRTUOSO_USER
              value: ${VIRTUOSO_USER}
            - name: VIRTUOSO_PASSWORD
              value: ${VIRTUOSO_DBA_PASSWORD}
          resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
 name: oc-api-service
 namespace: default
 labels:
   app: oc-api
spec:
 selector:
   app: oc-api
 ports:
   - name: http
     port: 80
     protocol: TCP
     targetPort: 8080
 type: ClusterIP

---

apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-to-https
  namespace: default
spec:
  redirectScheme:
    scheme: https
    permanent: true
    port: "443"

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
 name: oc-api
 namespace: default
 labels:
   app: oc-api
spec:
 entryPoints:
   - websecure
 routes:
   - kind: Rule
     match: Host(`api.opencitations.net`)
     services:
       - name: varnish-service
         port: 80
 tls:
   certResolver: myresolver

---

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
 name: oc-api-http-only
 namespace: default
 labels:
   app: oc-api
spec:
 entryPoints:
   - web
 routes:
   - kind: Rule
     match: Host(`api.opencitations.net`)
     middlewares:
       - name: redirect-to-https
     services:
       - name: varnish-service
         port: 80